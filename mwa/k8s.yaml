apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: api
    name: api
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    selector:
      io.kompose.service: api
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.service.type: nodeport
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: frontend
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo1
    name: mongo1
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: mongo1
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo2
    name: mongo2
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: mongo2
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo3
    name: mongo3
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: mongo3
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: redis
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: api
    name: api
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: api
      spec:
        containers:
        - env:
          - name: MONGO_URL
            value: mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=rs0
          image: docbuc/mwaapi:latest
          name: api
          ports:
          - containerPort: 3000
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.service.type: nodeport
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: frontend
      spec:
        containers:
        - image: docbuc/mwafe:latest
          name: frontend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo1
    name: mongo1
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: mongo1
      spec:
        containers:
        - args:
          - --replSet
          - rs0
          image: mongo:3
          name: mongo1
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: mongovol1
        restartPolicy: Always
        volumes:
        - name: mongovol1
          persistentVolumeClaim:
            claimName: mongovol1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongovol1
    name: mongovol1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo2
    name: mongo2
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: mongo2
      spec:
        containers:
        - args:
          - --replSet
          - rs0
          image: mongo:3
          name: mongo2
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: mongovol2
        restartPolicy: Always
        volumes:
        - name: mongovol2
          persistentVolumeClaim:
            claimName: mongovol2
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongovol2
    name: mongovol2
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo3
    name: mongo3
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: mongo3
      spec:
        containers:
        - args:
          - --replSet
          - rs0
          image: mongo:3
          name: mongo3
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: mongovol3
        restartPolicy: Always
        volumes:
        - name: mongovol3
          persistentVolumeClaim:
            claimName: mongovol3
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongovol3
    name: mongovol3
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yaml
      kompose.version: 1.14.0 (fa706f2)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis
      spec:
        containers:
        - image: redis:4-alpine
          name: redis
          ports:
          - containerPort: 6379
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

